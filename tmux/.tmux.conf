# rebind prefix to space 
#
unbind C-b
set-option -g prefix C-SPACE
bind C-j send-prefix

bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R
#
# # allows for mouse support
set -g mouse on

# quick resource
bind r source-file ~/.tmux.conf \; display "Reloaded tmux config!"

# sets vim motions in copy mode
set-window-option -g mode-keys vi
set -g status-keys vi

unbind -T copy-mode-vi Space; #Default for begin-selection
unbind -T copy-mode-vi Enter; #Default for copy-selection

bind -T copy-mode-vi v send-keys -X begin-selection
bind -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "xsel --clipboard"

#
# # for quick notes
# bind-key h split-window -h "vim ~/notes/notes.md"
# preix + space to jump back to prev window
bind Space last-window
#
# sets it to start at 1, not 0, more convientent tbh
set -g base-index 1
set -g renumber-windows on   # renumber all windows when any window is closed


# # Smart pane switching with awareness of Vim splits.
# # See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
| grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|l?n?vim?x?|fzf)(diff)?$'"
bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h'  'select-pane -L'
bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j'  'select-pane -D'
bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k'  'select-pane -U'
bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l'  'select-pane -R'
tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'
if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
 "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\'  'select-pane -l'"
if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
 "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\\\'  'select-pane -l'"

set-option -g focus-events on
bind-key -T copy-mode-vi 'C-h' select-pane -L
bind-key -T copy-mode-vi 'C-j' select-pane -D
bind-key -T copy-mode-vi 'C-k' select-pane -U
bind-key -T copy-mode-vi 'C-l' select-pane -R
bind-key -T copy-mode-vi 'C-\' select-pane -l

# style
set -g status-position top 
set -g status-justify absolute-centre
set -g status-style 'fg=color8 bg=default'
set -g status-right ''
# set -g status-right 'î«¾ #(cd #{pane_current_path}; git rev-parse --abbrev-ref HEAD)'
# set -g status-right ''
set -g status-left '#S'
set -g status-left-style 'fg=color8 dim'
set -g status-right-length 0
set -g status-left-length 100
setw -g window-status-current-style 'fg=color12 bg=default bold'
setw -g window-status-current-format '#I:#W '
setw -g window-status-style 'fg=color8 dim'

# Plugins
set -g @plugin 'laktak/extrakto

